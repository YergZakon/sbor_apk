"""
Login & Registration Page
"""
import streamlit as st
from modules.database import SessionLocal, User
from modules.auth import authenticate_user, login_user, logout_user, get_current_user, create_user
import re

st.set_page_config(page_title="–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É", page_icon="üîê", layout="centered")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
if "user" not in st.session_state:
    st.session_state["user"] = None

db = SessionLocal()

try:
    current_user = get_current_user()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if current_user:
        st.title("üëã –í—ã —É–∂–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")

        col1, col2 = st.columns([2, 1])

        with col1:
            st.success(f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {current_user['full_name'] or current_user['username']}")
            st.info(f"**–†–æ–ª—å:** {current_user['role']}")
            if current_user['farm_id']:
                st.info(f"**–•–æ–∑—è–π—Å—Ç–≤–æ ID:** {current_user['farm_id']}")

        with col2:
            if st.button("üö™ –í—ã–π—Ç–∏", use_container_width=True, type="primary"):
                logout_user()
                st.rerun()

        st.markdown("---")
        st.markdown("### üîó –ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏")

        col1, col2, col3 = st.columns(3)

        with col1:
            if st.button("üè† Dashboard", use_container_width=True):
                st.switch_page("pages/1_üè†_–ü–∞–Ω–µ–ª—å_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.py")

        with col2:
            if st.button("üå± –ü–æ–ª—è", use_container_width=True):
                st.switch_page("pages/2_üå±_–ü–æ–ª—è.py")

        with col3:
            if current_user['role'] == 'admin':
                if st.button("‚öôÔ∏è –ê–¥–º–∏–Ω–∫–∞", use_container_width=True):
                    st.switch_page("pages/98_‚öôÔ∏è_–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ.py")

    else:
        # –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
        st.title("üîê –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        st.markdown("–°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∞ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")

        tabs = st.tabs(["üîë –í—Ö–æ–¥", "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"])

        # ========================
        # –í–ö–õ–ê–î–ö–ê –í–•–û–î–ê
        # ========================
        with tabs[0]:
            st.markdown("### –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É")

            with st.form("login_form"):
                username = st.text_input(
                    "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à username",
                    help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
                )

                password = st.text_input(
                    "–ü–∞—Ä–æ–ª—å",
                    type="password",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å",
                    help="–ü–∞—Ä–æ–ª—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É"
                )

                submitted = st.form_submit_button("üîì –í–æ–π—Ç–∏", use_container_width=True, type="primary")

                if submitted:
                    if not username or not password:
                        st.error("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
                    else:
                        with st.spinner("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."):
                            user = authenticate_user(db, username, password)

                            if user:
                                login_user(user)
                                st.success(f"‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.full_name or user.username}!")
                                st.balloons()
                                st.rerun()
                            else:
                                st.error("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

            st.markdown("---")
            st.info("üí° **–ü–µ—Ä–≤—ã–π —Ä–∞–∑ –∑–¥–µ—Å—å?** –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'")

        # ========================
        # –í–ö–õ–ê–î–ö–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
        # ========================
        with tabs[1]:
            st.markdown("### –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç")

            st.info("‚ÑπÔ∏è **–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏** –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å —Å–∏—Å—Ç–µ–º–æ–π.")

            with st.form("registration_form"):
                col1, col2 = st.columns(2)

                with col1:
                    reg_username = st.text_input(
                        "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *",
                        placeholder="username",
                        help="–£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –≤—Ö–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, _)"
                    )

                    reg_email = st.text_input(
                        "Email *",
                        placeholder="user@example.com",
                        help="–í–∞—à email –∞–¥—Ä–µ—Å"
                    )

                with col2:
                    reg_full_name = st.text_input(
                        "–ü–æ–ª–Ω–æ–µ –∏–º—è *",
                        placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á",
                        help="–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è"
                    )

                    reg_password = st.text_input(
                        "–ü–∞—Ä–æ–ª—å *",
                        type="password",
                        placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤",
                        help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å"
                    )

                reg_password_confirm = st.text_input(
                    "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å *",
                    type="password",
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –µ—â–µ —Ä–∞–∑"
                )

                st.markdown("---")

                reg_submitted = st.form_submit_button("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", use_container_width=True, type="primary")

                if reg_submitted:
                    errors = []

                    # –í–∞–ª–∏–¥–∞—Ü–∏—è
                    if not reg_username or not reg_email or not reg_full_name or not reg_password:
                        errors.append("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è")

                    if reg_username and not re.match(r'^[a-zA-Z0-9_]{3,20}$', reg_username):
                        errors.append("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: 3-20 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã –∏ _")

                    if reg_email and not re.match(r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$', reg_email):
                        errors.append("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email")

                    if reg_password and len(reg_password) < 6:
                        errors.append("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤")

                    if reg_password != reg_password_confirm:
                        errors.append("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                    if reg_username:
                        existing_user = db.query(User).filter(User.username == reg_username).first()
                        if existing_user:
                            errors.append("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

                    if reg_email:
                        existing_email = db.query(User).filter(User.email == reg_email).first()
                        if existing_email:
                            errors.append("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

                    if errors:
                        for error in errors:
                            st.error(f"‚ùå {error}")
                    else:
                        try:
                            # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é farmer –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                            new_user = create_user(
                                db=db,
                                username=reg_username,
                                email=reg_email,
                                password=reg_password,
                                full_name=reg_full_name,
                                role="farmer",
                                farm_id=None
                            )

                            st.success(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                            st.info("üí° –°–µ–π—á–∞—Å –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ö–æ–∑—è–π—Å—Ç–≤–∞")
                            st.balloons()

                            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                            login_user(new_user)

                            # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ Farm Setup –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞
                            import time
                            time.sleep(2)
                            st.switch_page("pages/0_üè¢_–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è_—Ö–æ–∑—è–π—Å—Ç–≤–∞.py")

                        except Exception as e:
                            st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}")

            st.markdown("---")
            st.info("üí° **–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?** –í–æ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–í—Ö–æ–¥'")

finally:
    db.close()

# Sidebar info
with st.sidebar:
    st.markdown("### ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    st.markdown("""
    **–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**
    - üëë **Admin** - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø + —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    - üë®‚Äçüåæ **Farmer** - –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É —Ö–æ–∑—è–π—Å—Ç–≤—É
    - üëÅÔ∏è **Viewer** - —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä

    **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**
    - –ü–∞—Ä–æ–ª–∏ —Ö–µ—à–∏—Ä—É—é—Ç—Å—è (bcrypt)
    - –°–µ—Å—Å–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã
    - –ê—É–¥–∏—Ç –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π
    """)

    st.markdown("---")
    st.markdown("**–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**")
    st.markdown("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã")
