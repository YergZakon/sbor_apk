"""
–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
–î–µ–ª–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Å—Ç–∞—Ö
"""
import re
import sys

def add_auth_to_file(filepath):
    """–î–æ–±–∞–≤–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ —Ñ–∞–π–ª"""
    print(f"\n{'='*60}")
    print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞: {filepath}")
    print('='*60)

    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()

        original_content = content

        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ñ–∞–π–ª –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω
        if 'from modules.auth import' in content:
            print("  ‚úì –£–∂–µ –∏–º–µ–µ—Ç –∏–º–ø–æ—Ä—Ç—ã auth")
            return False

        # 2. –î–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç—ã –ø–æ—Å–ª–µ modules.database
        auth_imports = """from modules.auth import (
    require_auth,
    require_farm_binding,
    filter_query_by_farm,
    get_user_display_name,
    can_edit_data,
    can_delete_data
)"""

        # –ù–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É —Å –∏–º–ø–æ—Ä—Ç–æ–º database
        pattern = r'(from modules\.database import [^\n]+)'
        match = re.search(pattern, content)
        if match:
            content = content.replace(
                match.group(0),
                match.group(0) + '\n' + auth_imports
            )
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω—ã –∏–º–ø–æ—Ä—Ç—ã auth")
        else:
            print("  ‚úó –ù–µ –Ω–∞–π–¥–µ–Ω –∏–º–ø–æ—Ä—Ç database")
            return False

        # 3. –î–æ–±–∞–≤–∏—Ç—å require_auth() –ø–æ—Å–ª–µ st.set_page_config
        pattern = r'(st\.set_page_config\([^)]+\))'
        match = re.search(pattern, content)
        if match:
            auth_code = '''

# –¢—Ä–µ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–∏–≤—è–∑–∫—É –∫ —Ö–æ–∑—è–π—Å—Ç–≤—É
require_auth()
require_farm_binding()'''
            content = content.replace(
                match.group(0),
                match.group(0) + auth_code
            )
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω require_auth()")

        # 4. –î–æ–±–∞–≤–∏—Ç—å caption –ø–æ—Å–ª–µ st.title
        pattern = r'(st\.title\([^)]+\))'
        match = re.search(pattern, content)
        if match:
            caption = '\nst.caption(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: **{get_user_display_name()}**")'
            content = content.replace(
                match.group(0),
                match.group(0) + caption
            )
            print("  ‚úì –î–æ–±–∞–≤–ª–µ–Ω caption —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

        # 5. –ó–∞–º–µ–Ω–∏—Ç—å db.query(Farm).first() –Ω–∞ filter_query_by_farm
        content = re.sub(
            r'farm = db\.query\(Farm\)\.first\(\)',
            'farm = filter_query_by_farm(db.query(Farm), Farm).first()',
            content
        )
        if 'filter_query_by_farm(db.query(Farm)' in content:
            print("  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å Farm")

        # 6. –ó–∞–º–µ–Ω–∏—Ç—å db.query(Field).filter(Field.farm_id == farm.id) –Ω–∞ filter
        content = re.sub(
            r'db\.query\(Field\)\.filter\(Field\.farm_id == farm\.id\)',
            'filter_query_by_farm(db.query(Field), Field)',
            content
        )
        if 'filter_query_by_farm(db.query(Field)' in content:
            print("  ‚úì –û–±–Ω–æ–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å Field")

        # 7. –û–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞
        content = content.replace(
            'st.error("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–∑—è–π—Å—Ç–≤–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!")',
            'st.error("‚ùå –•–æ–∑—è–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ö–æ–∑—è–π—Å—Ç–≤—É.")'
        )

        # 8. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if content != original_content:
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
            return True
        else:
            print(f"\n‚ö†Ô∏è  –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            return False

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    files = [
        "pages/2_üå±_Fields.py",
        "pages/3_üìù_Journal.py",
        "pages/4_üåæ_Sowing.py",
        "pages/5_üíä_Fertilizers.py",
        "pages/6_üõ°Ô∏è_Pesticides.py",
        "pages/7_üêõ_Phytosanitary.py",
        "pages/8_üöú_Harvest.py",
        "pages/9_üß™_Agrochemistry.py",
        "pages/11_üå§Ô∏è_Weather.py",
        "pages/15_üì•_Import.py",
    ]

    print("\n" + "="*60)
    print("–ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò")
    print("="*60)
    print(f"\n–§–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(files)}")

    updated = 0
    skipped = 0
    errors = 0

    for filepath in files:
        result = add_auth_to_file(filepath)
        if result:
            updated += 1
        elif result is False:
            skipped += 1
        else:
            errors += 1

    print("\n" + "="*60)
    print("–ò–¢–û–ì–ò")
    print("="*60)
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated}")
    print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {errors}")
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å:")
    print("python -m py_compile pages/*.py")

if __name__ == "__main__":
    main()
