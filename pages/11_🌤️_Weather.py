"""
Weather - –ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
"""
import streamlit as st
import pandas as pd
from datetime import datetime, date, timedelta
from pathlib import Path
import plotly.express as px
import plotly.graph_objects as go

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
import sys
sys.path.append(str(Path(__file__).parent.parent))

from modules.database import get_db, Farm, Field, WeatherData
from modules.validators import DataValidator
from utils.formatters import format_date, format_number

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ", page_icon="üå§Ô∏è", layout="wide")

st.title("üå§Ô∏è –ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
validator = DataValidator()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db = next(get_db())

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞
farm = db.query(Farm).first()
if not farm:
    st.warning("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Farm Setup!")
    st.stop()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª–µ–π
fields = db.query(Field).filter(Field.farm_id == farm.id).all()

# –¢–∞–±—ã
tab1, tab2, tab3, tab4 = st.tabs(["üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö", "üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ–≥–æ–¥—ã", "üìà –ê–Ω–∞–ª–∏–∑", "üå°Ô∏è –ê–≥—Ä–æ–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"])

# ========================================
# TAB 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
# ========================================
with tab1:
    st.subheader("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")

    with st.form("weather_form"):
        col1, col2 = st.columns(2)

        with col1:
            # –î–∞—Ç–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
            observation_date = st.date_input(
                "–î–∞—Ç–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è *",
                value=date.today(),
                help="–î–∞—Ç–∞ –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏–π"
            )

            # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            st.markdown("#### üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞")

            temp_max = st.number_input(
                "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C) *",
                min_value=-50.0,
                max_value=50.0,
                value=20.0,
                step=0.5,
                help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –∑–∞ —Å—É—Ç–∫–∏"
            )

            temp_min = st.number_input(
                "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C) *",
                min_value=-50.0,
                max_value=50.0,
                value=10.0,
                step=0.5,
                help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –∑–∞ —Å—É—Ç–∫–∏"
            )

            temp_avg = (temp_max + temp_min) / 2
            st.metric("–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{temp_avg:.1f}¬∞C")

            # –ü–æ—á–≤–µ–Ω–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            soil_temp = st.number_input(
                "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ—á–≤—ã –Ω–∞ 10 —Å–º (¬∞C)",
                min_value=-20.0,
                max_value=50.0,
                value=15.0,
                step=0.5,
                help="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ—á–≤—ã –Ω–∞ –≥–ª—É–±–∏–Ω–µ 10 —Å–º"
            )

        with col2:
            # –û—Å–∞–¥–∫–∏
            st.markdown("#### üåßÔ∏è –û—Å–∞–¥–∫–∏")

            precipitation = st.number_input(
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å–∞–¥–∫–æ–≤ (–º–º) *",
                min_value=0.0,
                max_value=200.0,
                value=0.0,
                step=0.1,
                help="–°—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤ –∑–∞ —Å—É—Ç–∫–∏"
            )

            # –í–ª–∞–∂–Ω–æ—Å—Ç—å
            humidity = st.number_input(
                "–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ (%)",
                min_value=0,
                max_value=100,
                value=60,
                step=5,
                help="–°—Ä–µ–¥–Ω—è—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å"
            )

            # –í–µ—Ç–µ—Ä
            st.markdown("#### üí® –í–µ—Ç–µ—Ä")

            wind_speed = st.number_input(
                "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ (–º/—Å)",
                min_value=0.0,
                max_value=50.0,
                value=3.0,
                step=0.5,
                help="–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞"
            )

            wind_direction = st.selectbox(
                "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞",
                options=["–°", "–°–í", "–í", "–Æ–í", "–Æ", "–Æ–ó", "–ó", "–°–ó", "–®—Ç–∏–ª—å"],
                help="–ü—Ä–µ–æ–±–ª–∞–¥–∞—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞"
            )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        st.markdown("---")
        st.markdown("### ‚òÅÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")

        col3, col4, col5 = st.columns(3)

        with col3:
            cloudiness = st.slider(
                "–û–±–ª–∞—á–Ω–æ—Å—Ç—å (–±–∞–ª–ª—ã 0-10)",
                min_value=0,
                max_value=10,
                value=5,
                help="0 - —è—Å–Ω–æ, 10 - —Å–ø–ª–æ—à–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å"
            )

        with col4:
            sunshine_hours = st.number_input(
                "–°–æ–ª–Ω–µ—á–Ω–æ–µ —Å–∏—è–Ω–∏–µ (—á–∞—Å—ã)",
                min_value=0.0,
                max_value=24.0,
                value=8.0,
                step=0.5,
                help="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–∏—è–Ω–∏—è"
            )

        with col5:
            pressure = st.number_input(
                "–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ (–≥–ü–∞)",
                min_value=900,
                max_value=1100,
                value=1013,
                step=1,
                help="–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ"
            )

        # –Ø–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
        st.markdown("---")
        weather_phenomena = st.multiselect(
            "–Ø–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã",
            options=[
                "–î–æ–∂–¥—å",
                "–õ–∏–≤–µ–Ω—å",
                "–ì—Ä–æ–∑–∞",
                "–ì—Ä–∞–¥",
                "–°–Ω–µ–≥",
                "–¢—É–º–∞–Ω",
                "–†–æ—Å–∞",
                "–ò–Ω–µ–π",
                "–ó–∞–º–æ—Ä–æ–∑–æ–∫",
                "–°—É—Ö–æ–≤–µ–π"
            ],
            help="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–±–ª—é–¥–∞–≤—à–∏–µ—Å—è —è–≤–ª–µ–Ω–∏—è"
        )

        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
        notes = st.text_area(
            "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ",
            height=80,
            help="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        )

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitted = st.form_submit_button("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", use_container_width=True)

        if submitted:
            # –í–∞–ª–∏–¥–∞—Ü–∏—è
            errors = []

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã
            is_valid, msg = validator.validate_date(observation_date)
            if not is_valid:
                errors.append(f"–î–∞—Ç–∞: {msg}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
            if temp_min > temp_max:
                errors.append("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π")

            if errors:
                st.error("‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:\n" + "\n".join(f"- {e}" for e in errors))
            else:
                try:
                    # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ø–æ–≥–æ–¥—ã
                    weather = WeatherData(
                        farm_id=farm.id,
                        observation_date=observation_date,
                        temp_max_c=temp_max,
                        temp_min_c=temp_min,
                        temp_avg_c=temp_avg,
                        soil_temp_c=soil_temp if soil_temp else None,
                        precipitation_mm=precipitation,
                        humidity_percent=humidity if humidity else None,
                        wind_speed_ms=wind_speed if wind_speed else None,
                        wind_direction=wind_direction if wind_direction != "–®—Ç–∏–ª—å" else None,
                        cloudiness_score=cloudiness if cloudiness else None,
                        sunshine_hours=sunshine_hours if sunshine_hours else None,
                        pressure_hpa=pressure if pressure else None,
                        weather_phenomena=", ".join(weather_phenomena) if weather_phenomena else None,
                        notes=notes if notes else None
                    )
                    db.add(weather)
                    db.commit()

                    st.success(f"‚úÖ –ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ {format_date(observation_date)}")
                    st.balloons()

                except Exception as e:
                    db.rollback()
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")

# ========================================
# TAB 2: –ò—Å—Ç–æ—Ä–∏—è –ø–æ–≥–æ–¥—ã
# ========================================
with tab2:
    st.subheader("–ò—Å—Ç–æ—Ä–∏—è –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")

    # –§–∏–ª—å—Ç—Ä—ã
    col1, col2 = st.columns(2)

    with col1:
        filter_year = st.selectbox(
            "–ì–æ–¥",
            options=["–í—Å–µ –≥–æ–¥—ã"] + list(range(datetime.now().year, datetime.now().year - 10, -1)),
            key="filter_year_history"
        )

    with col2:
        filter_month = st.selectbox(
            "–ú–µ—Å—è—Ü",
            options=["–í—Å–µ –º–µ—Å—è—Ü—ã", "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
                    "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"],
            key="filter_month_history"
        )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    query = db.query(WeatherData).filter(WeatherData.farm_id == farm.id)

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if filter_year != "–í—Å–µ –≥–æ–¥—ã":
        from sqlalchemy import extract
        query = query.filter(extract('year', WeatherData.observation_date) == filter_year)

    if filter_month != "–í—Å–µ –º–µ—Å—è—Ü—ã":
        months = {
            "–Ø–Ω–≤–∞—Ä—å": 1, "–§–µ–≤—Ä–∞–ª—å": 2, "–ú–∞—Ä—Ç": 3, "–ê–ø—Ä–µ–ª—å": 4,
            "–ú–∞–π": 5, "–ò—é–Ω—å": 6, "–ò—é–ª—å": 7, "–ê–≤–≥—É—Å—Ç": 8,
            "–°–µ–Ω—Ç—è–±—Ä—å": 9, "–û–∫—Ç—è–±—Ä—å": 10, "–ù–æ—è–±—Ä—å": 11, "–î–µ–∫–∞–±—Ä—å": 12
        }
        from sqlalchemy import extract
        query = query.filter(extract('month', WeatherData.observation_date) == months[filter_month])

    weather_records = query.order_by(WeatherData.observation_date.desc()).all()

    if weather_records:
        st.metric("–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π", len(weather_records))

        # –¢–∞–±–ª–∏—Ü–∞
        data = []
        for w in weather_records:
            data.append({
                "–î–∞—Ç–∞": format_date(w.observation_date),
                "T –º–∞–∫—Å (¬∞C)": format_number(w.temp_max_c, 1),
                "T –º–∏–Ω (¬∞C)": format_number(w.temp_min_c, 1),
                "T —Å—Ä–µ–¥–Ω (¬∞C)": format_number(w.temp_avg_c, 1),
                "–û—Å–∞–¥–∫–∏ (–º–º)": format_number(w.precipitation_mm, 1),
                "–í–ª–∞–∂–Ω–æ—Å—Ç—å (%)": w.humidity_percent or "-",
                "–í–µ—Ç–µ—Ä (–º/—Å)": format_number(w.wind_speed_ms, 1) if w.wind_speed_ms else "-",
                "–Ø–≤–ª–µ–Ω–∏—è": w.weather_phenomena or "-"
            })

        df = pd.DataFrame(data)
        st.dataframe(df, use_container_width=True, hide_index=True)

        # –≠–∫—Å–ø–æ—Ä—Ç
        csv = df.to_csv(index=False).encode('utf-8-sig')
        st.download_button(
            "üì• –°–∫–∞—á–∞—Ç—å CSV",
            csv,
            "weather_history.csv",
            "text/csv"
        )

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        st.markdown("---")
        st.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥")

        col1, col2, col3, col4 = st.columns(4)

        avg_temp = sum(w.temp_avg_c for w in weather_records) / len(weather_records)
        total_precip = sum(w.precipitation_mm for w in weather_records)
        max_temp_record = max(w.temp_max_c for w in weather_records)
        min_temp_record = min(w.temp_min_c for w in weather_records)

        with col1:
            st.metric("–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{avg_temp:.1f}¬∞C")
        with col2:
            st.metric("–°—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤", f"{total_precip:.1f} –º–º")
        with col3:
            st.metric("–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{max_temp_record:.1f}¬∞C")
        with col4:
            st.metric("–ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", f"{min_temp_record:.1f}¬∞C")

    else:
        st.info("üì≠ –ù–µ—Ç –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥")

# ========================================
# TAB 3: –ê–Ω–∞–ª–∏–∑
# ========================================
with tab3:
    st.subheader("–ê–Ω–∞–ª–∏–∑ –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    all_weather = db.query(WeatherData).filter(
        WeatherData.farm_id == farm.id
    ).order_by(WeatherData.observation_date).all()

    if len(all_weather) < 7:
        st.warning("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 7 –¥–Ω–µ–π.")
    else:
        # –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        st.markdown("### üå°Ô∏è –î–∏–Ω–∞–º–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")

        dates = [w.observation_date for w in all_weather]
        temp_max = [w.temp_max_c for w in all_weather]
        temp_min = [w.temp_min_c for w in all_weather]
        temp_avg = [w.temp_avg_c for w in all_weather]

        fig_temp = go.Figure()
        fig_temp.add_trace(go.Scatter(x=dates, y=temp_max, mode='lines', name='T –º–∞–∫—Å', line=dict(color='red')))
        fig_temp.add_trace(go.Scatter(x=dates, y=temp_avg, mode='lines', name='T —Å—Ä–µ–¥–Ω', line=dict(color='orange')))
        fig_temp.add_trace(go.Scatter(x=dates, y=temp_min, mode='lines', name='T –º–∏–Ω', line=dict(color='blue')))

        fig_temp.update_layout(
            title="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞",
            xaxis_title="–î–∞—Ç–∞",
            yaxis_title="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (¬∞C)",
            hovermode='x unified'
        )
        st.plotly_chart(fig_temp, use_container_width=True)

        # –ì—Ä–∞—Ñ–∏–∫ –æ—Å–∞–¥–∫–æ–≤
        st.markdown("---")
        st.markdown("### üåßÔ∏è –û—Å–∞–¥–∫–∏")

        precip = [w.precipitation_mm for w in all_weather]

        fig_precip = go.Figure()
        fig_precip.add_trace(go.Bar(x=dates, y=precip, name='–û—Å–∞–¥–∫–∏', marker_color='lightblue'))

        fig_precip.update_layout(
            title="–°—É—Ç–æ—á–Ω—ã–µ –æ—Å–∞–¥–∫–∏",
            xaxis_title="–î–∞—Ç–∞",
            yaxis_title="–û—Å–∞–¥–∫–∏ (–º–º)",
            hovermode='x unified'
        )
        st.plotly_chart(fig_precip, use_container_width=True)

        # –°—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥—ã
        st.markdown("---")
        col1, col2 = st.columns(2)

        with col1:
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            last_7_days = all_weather[-7:] if len(all_weather) >= 7 else all_weather
            precip_7d = sum(w.precipitation_mm for w in last_7_days)
            st.metric("–û—Å–∞–¥–∫–∏ –∑–∞ 7 –¥–Ω–µ–π", f"{precip_7d:.1f} –º–º")

        with col2:
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
            last_30_days = all_weather[-30:] if len(all_weather) >= 30 else all_weather
            precip_30d = sum(w.precipitation_mm for w in last_30_days)
            st.metric("–û—Å–∞–¥–∫–∏ –∑–∞ 30 –¥–Ω–µ–π", f"{precip_30d:.1f} –º–º")

        # –°—É–º–º–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
        st.markdown("---")
        st.markdown("### ‚àë –°—É–º–º–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä (–°–≠–¢)")

        st.info("""
        **–°—É–º–º–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä** (–°–≠–¢) - —Å—É–º–º–∞ —Å—Ä–µ–¥–Ω–µ—Å—É—Ç–æ—á–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –≤—ã—à–µ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –º–∏–Ω–∏–º—É–º–∞ (+5¬∞C –∏–ª–∏ +10¬∞C).
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–∑ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π.
        """)

        # –°–≠–¢ –≤—ã—à–µ 5¬∞C
        set_5 = sum(max(0, w.temp_avg_c - 5) for w in all_weather)
        # –°–≠–¢ –≤—ã—à–µ 10¬∞C
        set_10 = sum(max(0, w.temp_avg_c - 10) for w in all_weather)

        col1, col2 = st.columns(2)

        with col1:
            st.metric("‚àëT > 5¬∞C", f"{set_5:.0f}¬∞C")
            st.caption("–î–ª—è –∫—É–ª—å—Ç—É—Ä —É–º–µ—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ—è—Å–∞")

        with col2:
            st.metric("‚àëT > 10¬∞C", f"{set_10:.0f}¬∞C")
            st.caption("–î–ª—è —Ç–µ–ø–ª–æ–ª—é–±–∏–≤—ã—Ö –∫—É–ª—å—Ç—É—Ä")

# ========================================
# TAB 4: –ê–≥—Ä–æ–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
# ========================================
with tab4:
    st.subheader("–ê–≥—Ä–æ–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")

    st.markdown("### üìö –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")

    st.markdown("#### üå°Ô∏è –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ —Ç–µ–ø–ª–µ (–°–≠–¢ > 10¬∞C)")

    crop_requirements = pd.DataFrame({
        "–ö—É–ª—å—Ç—É—Ä–∞": [
            "–Ø—Ä–æ–≤–∞—è –ø—à–µ–Ω–∏—Ü–∞",
            "–Ø—á–º–µ–Ω—å —è—Ä–æ–≤–æ–π",
            "–û–≤–µ—Å",
            "–ì–æ—Ä–æ—Ö",
            "–ü–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫",
            "–ö—É–∫—É—Ä—É–∑–∞ (–∑–µ—Ä–Ω–æ)",
            "–°–æ—è"
        ],
        "–°–≠–¢ (¬∞C)": [
            "1200-1600",
            "1000-1400",
            "1000-1500",
            "1200-1600",
            "1800-2200",
            "2200-2600",
            "1800-2500"
        ],
        "–í–µ–≥–µ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (–¥–Ω–µ–π)": [
            "85-100",
            "75-90",
            "80-110",
            "70-90",
            "100-130",
            "120-150",
            "110-140"
        ]
    })
    st.dataframe(crop_requirements, use_container_width=True, hide_index=True)

    st.markdown("---")
    st.markdown("#### üíß –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è (–ö–£)")

    st.info("""
    **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è** = –°—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤ / –ò—Å–ø–∞—Ä—è–µ–º–æ—Å—Ç—å

    - **–ö–£ > 1.0** - –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ
    - **–ö–£ 0.6-1.0** - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ
    - **–ö–£ 0.3-0.6** - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ —É–≤–ª–∞–∂–Ω–µ–Ω–∏–µ (–∑–∞—Å—É—à–ª–∏–≤–æ)
    - **–ö–£ < 0.3** - –æ—á–µ–Ω—å –∑–∞—Å—É—à–ª–∏–≤–æ
    """)

    st.markdown("**–î–ª—è –ê–∫–º–æ–ª–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:**")
    st.write("- –°—Ä–µ–¥–Ω–∏–π –ö–£: 0.4-0.7 (–∑–æ–Ω–∞ —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–µ–º–ª–µ–¥–µ–ª–∏—è)")
    st.write("- –ì–æ–¥–æ–≤–∞—è —Å—É–º–º–∞ –æ—Å–∞–¥–∫–æ–≤: 250-350 –º–º")
    st.write("- –ó–∞ –≤–µ–≥–µ—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥: 150-200 –º–º")

    st.markdown("---")
    st.markdown("#### ‚ùÑÔ∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")

    critical_temps = pd.DataFrame({
        "–§–∞–∑–∞ —Ä–∞–∑–≤–∏—Ç–∏—è": [
            "–í—Å—Ö–æ–¥—ã –ø—à–µ–Ω–∏—Ü—ã",
            "–ö—É—â–µ–Ω–∏–µ –ø—à–µ–Ω–∏—Ü—ã",
            "–¶–≤–µ—Ç–µ–Ω–∏–µ –ø—à–µ–Ω–∏—Ü—ã",
            "–í—Å—Ö–æ–¥—ã –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫–∞",
            "–¶–≤–µ—Ç–µ–Ω–∏–µ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∏–∫–∞"
        ],
        "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è T (¬∞C)": [
            "-9 –¥–æ -10",
            "-16 –¥–æ -18",
            "-1 –¥–æ -2",
            "-5 –¥–æ -6",
            "-1 –¥–æ -2"
        ],
        "–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è": [
            "–ì–∏–±–µ–ª—å –≤—Å—Ö–æ–¥–æ–≤",
            "–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ —É–∑–ª–∞ –∫—É—â–µ–Ω–∏—è",
            "–°—Ç–µ—Ä–∏–ª—å–Ω–æ—Å—Ç—å –ø—ã–ª—å—Ü—ã",
            "–ì–∏–±–µ–ª—å —Ä–∞—Å—Ç–µ–Ω–∏–π",
            "–ü—É—Å—Ç–æ–∑–µ—Ä–Ω–æ—Å—Ç—å"
        ]
    })
    st.dataframe(critical_temps, use_container_width=True, hide_index=True)

    st.markdown("---")
    st.warning("""
    **‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–≥–æ–¥—ã:**
    - **–í–µ—Å–µ–Ω–Ω–∏–µ –∑–∞–º–æ—Ä–æ–∑–∫–∏** (–º–∞–π) - –æ–ø–∞—Å–Ω—ã –¥–ª—è –≤—Å—Ö–æ–¥–æ–≤
    - **–°—É—Ö–æ–≤–µ–∏** (–∏—é–Ω—å-–∏—é–ª—å) - –∫—Ä–∏—Ç–∏—á–Ω—ã –¥–ª—è —Ü–≤–µ—Ç–µ–Ω–∏—è –∏ –Ω–∞–ª–∏–≤–∞
    - **–û—Å–∞–¥–∫–∏ –≤–æ –≤—Ä–µ–º—è —É–±–æ—Ä–∫–∏** (–∞–≤–≥—É—Å—Ç-—Å–µ–Ω—Ç—è–±—Ä—å) - –≤–ª–∏—è—é—Ç –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∑–µ—Ä–Ω–∞
    - **–ó–∏–º–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã** (–¥–ª—è –æ–∑–∏–º—ã—Ö) - –º–æ—Ä–æ–∑–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
    """)

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("üå§Ô∏è **–ú–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ** | –í–µ—Ä—Å–∏—è 1.0")
