"""
Fields - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è–º–∏
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª–µ–π
"""
import streamlit as st
import pandas as pd
from sqlalchemy.orm import Session
from modules.database import SessionLocal, Farm, Field
from modules.auth import (
    require_auth,
    require_farm_binding,
    filter_query_by_farm,
    get_user_display_name,
    can_edit_data,
    can_delete_data
)
from modules.validators import validator
from modules.config import settings
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ü–æ–ª—è", page_icon="üå±", layout="wide")

# –¢—Ä–µ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–∏–≤—è–∑–∫—É –∫ —Ö–æ–∑—è–π—Å—Ç–≤—É
require_auth()
require_farm_binding()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üå± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è–º–∏")
st.caption(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: **{get_user_display_name()}**")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ë–î
db = SessionLocal()

try:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞
    from modules.auth import get_current_user, is_admin
    user = get_current_user()

    if is_admin():
        # –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ö–æ–∑—è–π—Å—Ç–≤–æ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –¥–æ–±–∞–≤—å—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä)
        farm = db.query(Farm).first()
    else:
        # –§–µ—Ä–º–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å–≤–æ–∏–º —Ö–æ–∑—è–π—Å—Ç–≤–æ–º
        user_farm_id = user.get("farm_id") if user else None
        if user_farm_id:
            farm = db.query(Farm).filter(Farm.id == user_farm_id).first()
        else:
            farm = None

    if not farm:
        st.error("‚ùå –•–æ–∑—è–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ö–æ–∑—è–π—Å—Ç–≤—É.")
        st.stop()

    # ============================================================================
    # –°–ü–ò–°–û–ö –ü–û–õ–ï–ô
    # ============================================================================

    st.markdown("### üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π")

    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    from modules.auth import get_current_user
    user = get_current_user()
    st.info(f"üîç DEBUG: User ID: {user.get('id')}, farm_id –≤ session: {user.get('farm_id')}, farm.id –∏–∑ –ë–î: {farm.id}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º, —Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π –µ—Å—Ç—å –≤ –ë–î –¥–ª—è —ç—Ç–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞
    all_fields_for_farm = db.query(Field).filter(Field.farm_id == farm.id).all()
    st.info(f"üîç DEBUG: –í—Å–µ–≥–æ –ø–æ–ª–µ–π –≤ –ë–î –¥–ª—è farm_id={farm.id}: {len(all_fields_for_farm)}")

    fields = filter_query_by_farm(db.query(Field), Field).all()
    st.info(f"üîç DEBUG: –ü–æ–ª–µ–π –ø–æ—Å–ª–µ filter_query_by_farm: {len(fields)}")

    if fields:
        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        fields_data = []
        for field in fields:
            fields_data.append({
                'ID': field.id,
                '–ö–æ–¥': field.field_code,
                '–ù–∞–∑–≤–∞–Ω–∏–µ': field.name or '-',
                '–ü–ª–æ—â–∞–¥—å (–≥–∞)': field.area_ha or 0,
                '–¢–∏–ø –ø–æ—á–≤—ã': field.soil_type or '-',
                'pH': field.ph_water or '-',
                '–ì—É–º—É—Å (%)': field.humus_pct or '-',
                '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã': f"{field.center_lat}, {field.center_lon}" if field.center_lat and field.center_lon else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'
            })

        df_fields = pd.DataFrame(fields_data)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        st.dataframe(df_fields, use_container_width=True, hide_index=True)

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        col1, col2, col3, col4 = st.columns(4)
        with col1:
            st.metric("–í—Å–µ–≥–æ –ø–æ–ª–µ–π", len(fields))
        with col2:
            total_area = sum([f.area_ha for f in fields if f.area_ha])
            st.metric("–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å", f"{total_area:,.1f} –≥–∞")
        with col3:
            avg_area = total_area / len(fields) if fields else 0
            st.metric("–°—Ä–µ–¥–Ω—è—è –ø–ª–æ—â–∞–¥—å", f"{avg_area:,.1f} –≥–∞")
        with col4:
            fields_with_coords = sum([1 for f in fields if f.center_lat and f.center_lon])
            st.metric("–° –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏", f"{fields_with_coords}/{len(fields)}")

    else:
        st.info("–ü–æ–ª—è –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ –Ω–∏–∂–µ.")

    st.markdown("---")

    # ============================================================================
    # –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –ü–û–õ–Ø
    # ============================================================================

    st.markdown("### ‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–µ")

    with st.form("add_field_form"):
        col1, col2 = st.columns(2)

        with col1:
            st.markdown("#### –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")

            field_name = st.text_input(
                "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è*",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ",
                help="–£–¥–æ–±–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—è"
            )

            area_ha = st.number_input(
                "–ü–ª–æ—â–∞–¥—å (–≥–∞)*",
                min_value=0.1,
                max_value=10000.0,
                step=0.1,
                value=100.0,
                help="–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–∞—è –ø–ª–æ—â–∞–¥—å"
            )

            cadastral_number = st.text_input(
                "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä",
                placeholder="XX:XX:XXXXXX:XX",
                help="–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä —É—á–∞—Å—Ç–∫–∞"
            )

            st.markdown("#### –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")

            center_lat = st.number_input(
                "–®–∏—Ä–æ—Ç–∞",
                min_value=40.0,
                max_value=56.0,
                value=51.1801,
                step=0.0001,
                format="%.4f",
                help="GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ü–µ–Ω—Ç—Ä–∞ –ø–æ–ª—è"
            )

            center_lon = st.number_input(
                "–î–æ–ª–≥–æ—Ç–∞",
                min_value=46.0,
                max_value=88.0,
                value=71.4460,
                step=0.0001,
                format="%.4f",
                help="GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ —Ü–µ–Ω—Ç—Ä–∞ –ø–æ–ª—è"
            )

        with col2:
            st.markdown("#### –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ—á–≤—ã")

            soil_type = st.selectbox(
                "–¢–∏–ø –ø–æ—á–≤—ã",
                options=["–ù–µ —É–∫–∞–∑–∞–Ω"] + settings.SOIL_TYPES,
                help="–¢–∏–ø –ø–æ—á–≤—ã –ø–æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏"
            )

            soil_texture = st.selectbox(
                "–ì—Ä–∞–Ω—É–ª–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤",
                options=["–ù–µ —É–∫–∞–∑–∞–Ω"] + settings.SOIL_TEXTURES,
                help="–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤ –ø–æ—á–≤—ã"
            )

            relief = st.selectbox(
                "–†–µ–ª—å–µ—Ñ",
                options=["–ù–µ —É–∫–∞–∑–∞–Ω"] + settings.RELIEF_TYPES,
                help="–¢–∏–ø —Ä–µ–ª—å–µ—Ñ–∞ –ø–æ–ª—è"
            )

            slope_degree = st.number_input(
                "–£–∫–ª–æ–Ω (–≥—Ä–∞–¥—É—Å—ã)",
                min_value=0.0,
                max_value=45.0,
                value=0.0,
                step=0.1,
                help="–°—Ç–µ–ø–µ–Ω—å —É–∫–ª–æ–Ω–∞ –ø–æ–ª—è"
            )

            st.markdown("#### –ê–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")

            col2_1, col2_2 = st.columns(2)

            with col2_1:
                ph_water = st.number_input(
                    "pH –≤–æ–¥–Ω—ã–π",
                    min_value=4.0,
                    max_value=9.5,
                    value=6.5,
                    step=0.1,
                    help="pH –ø–æ—á–≤—ã (–≤–æ–¥–Ω–∞—è –≤—ã—Ç—è–∂–∫–∞)"
                )

                humus_pct = st.number_input(
                    "–ì—É–º—É—Å (%)",
                    min_value=0.1,
                    max_value=12.0,
                    value=3.0,
                    step=0.1,
                    help="–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≥—É–º—É—Å–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö"
                )

            with col2_2:
                p2o5_mg_kg = st.number_input(
                    "P2O5 (–º–≥/–∫–≥)",
                    min_value=0.0,
                    max_value=500.0,
                    value=50.0,
                    step=1.0,
                    help="–ü–æ–¥–≤–∏–∂–Ω—ã–π —Ñ–æ—Å—Ñ–æ—Ä"
                )

                k2o_mg_kg = st.number_input(
                    "K2O (–º–≥/–∫–≥)",
                    min_value=0.0,
                    max_value=1000.0,
                    value=150.0,
                    step=1.0,
                    help="–û–±–º–µ–Ω–Ω—ã–π –∫–∞–ª–∏–π"
                )

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ", use_container_width=True, type="primary")

        if submitted:
            # –í–∞–ª–∏–¥–∞—Ü–∏—è
            errors = []

            if not field_name:
                errors.append("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")

            if area_ha <= 0:
                errors.append("–ü–ª–æ—â–∞–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")

            # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
            if center_lat and center_lon:
                is_valid, msg = validator.validate_coordinates(center_lat, center_lon)
                if not is_valid:
                    errors.append(msg)

            # –í–∞–ª–∏–¥–∞—Ü–∏—è pH
            if ph_water:
                is_valid, msg = validator.validate_ph(ph_water)
                if not is_valid:
                    errors.append(msg)

            if errors:
                for error in errors:
                    st.error(f"‚ùå {error}")
            else:
                # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –ø–æ–ª—è
                existing_codes = db.query(Field.field_code).all()
                field_number = len(existing_codes) + 1
                field_code = f"field_{field_number:03d}"

                # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è
                new_field = Field(
                    farm_id=farm.id,
                    field_code=field_code,
                    name=field_name,
                    cadastral_number=cadastral_number if cadastral_number else None,
                    area_ha=area_ha,
                    center_lat=center_lat if center_lat else None,
                    center_lon=center_lon if center_lon else None,
                    soil_type=soil_type if soil_type != "–ù–µ —É–∫–∞–∑–∞–Ω" else None,
                    soil_texture=soil_texture if soil_texture != "–ù–µ —É–∫–∞–∑–∞–Ω" else None,
                    relief=relief if relief != "–ù–µ —É–∫–∞–∑–∞–Ω" else None,
                    slope_degree=slope_degree if slope_degree > 0 else None,
                    ph_water=ph_water if ph_water else None,
                    humus_pct=humus_pct if humus_pct else None,
                    p2o5_mg_kg=p2o5_mg_kg if p2o5_mg_kg else None,
                    k2o_mg_kg=k2o_mg_kg if k2o_mg_kg else None,
                )

                db.add(new_field)
                db.commit()

                st.success(f"‚úÖ –ü–æ–ª–µ '{field_name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –ö–æ–¥ –ø–æ–ª—è: {field_code}")
                st.balloons()

                # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                st.rerun()

    st.markdown("---")

    # ============================================================================
    # –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–Ø
    # ============================================================================

    if fields:
        st.markdown("### ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è")

        selected_field = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
            options=fields,
            format_func=lambda x: f"{x.field_code} - {x.name or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} ({x.area_ha} –≥–∞)"
        )

        if selected_field:
            with st.expander("üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–µ", expanded=False):
                with st.form(f"edit_field_{selected_field.id}"):
                    col1, col2 = st.columns(2)

                    with col1:
                        edit_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=selected_field.name or "")
                        edit_area = st.number_input("–ü–ª–æ—â–∞–¥—å (–≥–∞)", value=float(selected_field.area_ha or 0), min_value=0.1, step=0.1)
                        edit_cadastral = st.text_input("–ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä", value=selected_field.cadastral_number or "")

                    with col2:
                        edit_soil_type = st.selectbox(
                            "–¢–∏–ø –ø–æ—á–≤—ã",
                            options=["–ù–µ —É–∫–∞–∑–∞–Ω"] + settings.SOIL_TYPES,
                            index=settings.SOIL_TYPES.index(selected_field.soil_type) + 1 if selected_field.soil_type in settings.SOIL_TYPES else 0
                        )
                        edit_ph = st.number_input("pH –≤–æ–¥–Ω—ã–π", value=float(selected_field.ph_water or 0), min_value=4.0, max_value=9.5, step=0.1)
                        edit_humus = st.number_input("–ì—É–º—É—Å (%)", value=float(selected_field.humus_pct or 0), min_value=0.0, max_value=12.0, step=0.1)

                    col_buttons = st.columns([1, 1, 2])

                    with col_buttons[0]:
                        update_btn = st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", use_container_width=True, type="primary")

                    with col_buttons[1]:
                        delete_btn = st.form_submit_button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", use_container_width=True, type="secondary")

                    if update_btn:
                        selected_field.name = edit_name
                        selected_field.area_ha = edit_area
                        selected_field.cadastral_number = edit_cadastral if edit_cadastral else None
                        selected_field.soil_type = edit_soil_type if edit_soil_type != "–ù–µ —É–∫–∞–∑–∞–Ω" else None
                        selected_field.ph_water = edit_ph if edit_ph > 0 else None
                        selected_field.humus_pct = edit_humus if edit_humus > 0 else None

                        db.commit()
                        st.success("‚úÖ –ü–æ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
                        st.rerun()

                    if delete_btn:
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                        operations_count = db.query(Field).filter(Field.id == selected_field.id).count()

                        if operations_count > 0:
                            st.error(f"‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–µ: –µ—Å—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–æ–ø–µ—Ä–∞—Ü–∏–∏)")
                        else:
                            db.delete(selected_field)
                            db.commit()
                            st.success("‚úÖ –ü–æ–ª–µ —É–¥–∞–ª–µ–Ω–æ!")
                            st.rerun()

    st.markdown("---")

    # ============================================================================
    # –ö–ê–†–¢–ê –ü–û–õ–ï–ô (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
    # ============================================================================

    fields_with_coords = [f for f in fields if f.center_lat and f.center_lon]

    if fields_with_coords:
        st.markdown("### üó∫Ô∏è –ö–∞—Ä—Ç–∞ –ø–æ–ª–µ–π")

        # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame –¥–ª—è –∫–∞—Ä—Ç—ã
        map_data = pd.DataFrame([
            {
                'lat': f.center_lat,
                'lon': f.center_lon,
                'name': f.name or f.field_code,
                'area': f.area_ha
            }
            for f in fields_with_coords
        ])

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
        st.map(map_data, size='area', zoom=10)

        st.info(f"üìç –ù–∞ –∫–∞—Ä—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ {len(fields_with_coords)} –∏–∑ {len(fields)} –ø–æ–ª–µ–π")

finally:
    db.close()

# Sidebar
with st.sidebar:
    st.markdown("### ‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
    st.info("""
    **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è–º–∏** –ø–æ–∑–≤–æ–ª—è–µ—Ç:
    - –î–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è
    - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ
    - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª–µ–π
    - –û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–ª—è –Ω–∞ –∫–∞—Ä—Ç–µ

    **–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:**
    - –ù–∞–∑–≤–∞–Ω–∏–µ
    - –ü–ª–æ—â–∞–¥—å (–≥–∞)

    **–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å:**
    - GPS-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    - –¢–∏–ø –ø–æ—á–≤—ã
    - –ê–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    """)

    st.markdown("### üìä –¢–∏–ø—ã –ø–æ—á–≤")
    with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫"):
        for soil in settings.SOIL_TYPES:
            st.markdown(f"- {soil}")

    st.markdown("### üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    st.markdown("""
    - –î–æ–±–∞–≤—å—Ç–µ GPS-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ
    - –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∞–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    - –û–±–Ω–æ–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –µ–∂–µ–≥–æ–¥–Ω–æ
    """)
