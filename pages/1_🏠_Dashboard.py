"""
Dashboard - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
–ú–µ—Ç—Ä–∏–∫–∏, –ø—Ä–æ–≥—Ä–µ—Å—Å, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
"""
import streamlit as st
import pandas as pd
from sqlalchemy.orm import Session
from modules.database import SessionLocal, Farm, Field, Operation, AgrochemicalAnalysis
from modules.config import settings
from modules.auth import require_auth, filter_query_by_farm, get_current_user, get_user_display_name, is_admin
import plotly.express as px
import plotly.graph_objects as go

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="Dashboard", page_icon="üè†", layout="wide")

# –¢—Ä–µ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
require_auth()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
user = get_current_user()
st.title(f"üè† Dashboard - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
st.caption(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, **{get_user_display_name()}**!")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ë–î
db = SessionLocal()

try:
    # ============================================================================
    # –û–°–ù–û–í–ù–´–ï –ú–ï–¢–†–ò–ö–ò
    # ============================================================================

    st.markdown("### üìä –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - —Ç–æ–ª—å–∫–æ –µ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–æ (–≤—Å–µ–≥–¥–∞ 1)
    # –î–ª—è –∞–¥–º–∏–Ω–∞ - –≤—Å–µ —Ö–æ–∑—è–π—Å—Ç–≤–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
    if is_admin():
        farms_count = db.query(Farm).count()
        farm = db.query(Farm).first()
    else:
        user_farm_id = user.get("farm_id") if user else None
        farm = db.query(Farm).filter(Farm.id == user_farm_id).first() if user_farm_id else None
        farms_count = 1 if farm else 0

    fields_count = filter_query_by_farm(db.query(Field), Field).count()
    operations_count = filter_query_by_farm(db.query(Operation), Operation).count()

    # –†–∞—Å—á–µ—Ç –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏
    total_area = filter_query_by_farm(db.query(Field), Field).with_entities(Field.area_ha).all()
    total_area_sum = sum([f[0] for f in total_area if f[0]]) if total_area else 0

    # –ú–µ—Ç—Ä–∏–∫–∏ –≤ 4 –∫–æ–ª–æ–Ω–∫–∏
    col1, col2, col3, col4 = st.columns(4)

    with col1:
        st.metric(
            label="–•–æ–∑—è–π—Å—Ç–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ" if is_admin() else "–•–æ–∑—è–π—Å—Ç–≤–æ",
            value=farms_count if is_admin() else (farm.name if farm else "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ"),
            delta=None
        )

    with col2:
        st.metric(
            label="–ü–æ–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ",
            value=fields_count,
            delta=f"üìä –í—Å–µ–≥–æ –ø–æ–ª–µ–π" if fields_count > 0 else None
        )

    with col3:
        st.metric(
            label="–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å",
            value=f"{total_area_sum:,.0f} –≥–∞",
            delta=None
        )

    with col4:
        st.metric(
            label="–û–ø–µ—Ä–∞—Ü–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ",
            value=operations_count,
            delta=f"üìà –û–ø–µ—Ä–∞—Ü–∏–∏" if operations_count > 0 else None
        )

    st.markdown("---")

    # ============================================================================
    # –ü–û–õ–ù–û–¢–ê –î–ê–ù–ù–´–•
    # ============================================================================

    st.markdown("### üìà –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö")

    # –†–∞—Å—á–µ—Ç –ø–æ–ª–Ω–æ—Ç—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    # –î–ª—è –ø–æ–ª–µ–π: 100% –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—è, –∏–Ω–∞—á–µ 0%
    # –î–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ 100 –æ–ø–µ—Ä–∞—Ü–∏–π –∫–∞–∫ –æ—Ä–∏–µ–Ω—Ç–∏—Ä
    data_completeness = {
        "–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞": 100 if farms_count > 0 else 0,
        "–ü–∞—Å–ø–æ—Ä—Ç–∞ –ø–æ–ª–µ–π": 100 if fields_count > 0 else 0,
        "–ê–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–∏–∑—ã": 0,  # –ë—É–¥–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –ø–æ–∑–∂–µ
        "–ü–æ–ª–µ–≤—ã–µ —Ä–∞–±–æ—Ç—ã": min(100, (operations_count / 100) * 100) if operations_count > 0 else 0,
        "–£—Ä–æ–∂–∞–π–Ω–æ—Å—Ç—å": 0,
        "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ": 0,
        "–ú–µ—Ç–µ–æ–¥–∞–Ω–Ω—ã–µ": 0,
        "–§–∏—Ç–æ—Å–∞–Ω–∏—Ç–∞—Ä–∏—è": 0,
    }

    # –ê–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–∏–∑—ã
    analyses_count = filter_query_by_farm(db.query(AgrochemicalAnalysis), AgrochemicalAnalysis).count()
    if fields_count > 0:
        data_completeness["–ê–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–∏–∑—ã"] = min(100, (analyses_count / fields_count) * 100)

    # –°—Ä–µ–¥–Ω—è—è –ø–æ–ª–Ω–æ—Ç–∞
    avg_completeness = sum(data_completeness.values()) / len(data_completeness)

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–π –ø–æ–ª–Ω–æ—Ç—ã
    col1, col2, col3 = st.columns(3)

    with col1:
        st.metric(
            label="–¢–µ–∫—É—â–∞—è –ø–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö",
            value=f"{avg_completeness:.1f}%",
            delta=f"–¶–µ–ª—å: 70%"
        )

    with col2:
        st.metric(
            label="ML-–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å",
            value=f"{min(avg_completeness * 1.3, 100):.1f}%",
            delta="–¶–µ–ª—å: 90%"
        )

    with col3:
        status = "‚úÖ –û—Ç–ª–∏—á–Ω–æ" if avg_completeness >= 70 else "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è" if avg_completeness >= 40 else "‚ùå –ö—Ä–∏—Ç–∏—á–Ω–æ"
        st.metric(
            label="–°—Ç–∞—Ç—É—Å",
            value=status,
            delta=None
        )

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    st.markdown("#### –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–∞–Ω–Ω—ã—Ö:")

    for category, completeness in data_completeness.items():
        col1, col2 = st.columns([3, 1])
        with col1:
            st.progress(completeness / 100)
        with col2:
            st.write(f"{category}: **{completeness:.0f}%**")

    st.markdown("---")

    # ============================================================================
    # –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–Ø
    # ============================================================================

    if fields_count > 0:
        st.markdown("### üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")

        col1, col2 = st.columns(2)

        with col1:
            # –ì—Ä–∞—Ñ–∏–∫ –ø–æ–ª–Ω–æ—Ç—ã –¥–∞–Ω–Ω—ã—Ö
            fig_completeness = go.Figure(data=[
                go.Bar(
                    x=list(data_completeness.keys()),
                    y=list(data_completeness.values()),
                    marker_color=['green' if v >= 70 else 'orange' if v >= 40 else 'red' for v in data_completeness.values()],
                    text=[f"{v:.0f}%" for v in data_completeness.values()],
                    textposition='auto',
                )
            ])
            fig_completeness.update_layout(
                title="–ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
                xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
                yaxis_title="–ü–æ–ª–Ω–æ—Ç–∞ (%)",
                yaxis_range=[0, 100],
                height=400
            )
            fig_completeness.add_hline(y=70, line_dash="dash", line_color="green", annotation_text="–¶–µ–ª—å: 70%")
            st.plotly_chart(fig_completeness, use_container_width=True)

        with col2:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–µ–π –ø–æ–ª–µ–π
            fields_data = filter_query_by_farm(db.query(Field.name, Field.area_ha).filter(Field.area_ha.isnot(None)), Field).all()
            if fields_data:
                df_fields = pd.DataFrame(fields_data, columns=['–ü–æ–ª–µ', '–ü–ª–æ—â–∞–¥—å (–≥–∞)'])

                fig_fields = px.pie(
                    df_fields,
                    values='–ü–ª–æ—â–∞–¥—å (–≥–∞)',
                    names='–ü–æ–ª–µ',
                    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–µ–π –ø–æ –ø–æ–ª—è–º',
                    height=400
                )
                st.plotly_chart(fig_fields, use_container_width=True)
            else:
                st.info("–î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞")

    st.markdown("---")

    # ============================================================================
    # –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –ò –ó–ê–î–ê–ß–ò
    # ============================================================================

    st.markdown("### üìã –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è")

    notifications = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ö–æ–∑—è–π—Å—Ç–≤–∞
    if farms_count == 0:
        notifications.append({
            "type": "error",
            "message": "‚ùó –ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        })

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª–µ–π
    if fields_count == 0:
        notifications.append({
            "type": "warning",
            "message": "‚ö†Ô∏è –ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è–º–∏' –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è."
        })
    elif farm and farm.arable_area_ha and fields_count < 10:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª–µ–π –º–∞–ª–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–ª–æ—â–∞–¥–∏ —Ö–æ–∑—è–π—Å—Ç–≤–∞
        notifications.append({
            "type": "info",
            "message": f"‚ÑπÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–æ {fields_count} –ø–æ–ª–µ–π. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–Ω–µ—Å–µ–Ω—ã –≤—Å–µ –ø–æ–ª—è —Ö–æ–∑—è–π—Å—Ç–≤–∞."
        })

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤
    if fields_count > 0 and analyses_count == 0:
        notifications.append({
            "type": "warning",
            "message": "‚ö†Ô∏è –ù–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–≥—Ä–æ—Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –ø–æ—á–≤—ã."
        })

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    fields_no_coords = filter_query_by_farm(
        db.query(Field).filter(
            (Field.center_lat.is_(None)) | (Field.center_lon.is_(None))
        ),
        Field
    ).count()

    if fields_no_coords > 0:
        notifications.append({
            "type": "info",
            "message": f"‚ÑπÔ∏è –£ {fields_no_coords} –ø–æ–ª–µ–π –Ω–µ —É–∫–∞–∑–∞–Ω—ã GPS-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã. –î–æ–±–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ."
        })

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
    if operations_count == 0:
        notifications.append({
            "type": "info",
            "message": "‚ÑπÔ∏è –ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –ø–æ–ª–µ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏. –ù–∞—á–Ω–∏—Ç–µ –≤–Ω–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–µ–≤–µ, –æ–±—Ä–∞–±–æ—Ç–∫–∞—Ö –∏ —É–±–æ—Ä–∫–µ."
        })

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if notifications:
        for notif in notifications:
            if notif["type"] == "error":
                st.error(notif["message"])
            elif notif["type"] == "warning":
                st.warning(notif["message"])
            else:
                st.info(notif["message"])
    else:
        st.success("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤–Ω–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!")

    st.markdown("---")

    # ============================================================================
    # –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø
    # ============================================================================

    st.markdown("### üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")

    col1, col2, col3, col4 = st.columns(4)

    with col1:
        if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ", use_container_width=True):
            st.switch_page("pages/2_üå±_Fields.py")

    with col2:
        if st.button("üì• –ò–º–ø–æ—Ä—Ç –∏–∑ Excel", use_container_width=True):
            st.switch_page("pages/15_üì•_Import.py")

    with col3:
        if st.button("üìù –ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π", use_container_width=True):
            st.switch_page("pages/3_üìù_Journal.py")

    with col4:
        if st.button("üåæ –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å–µ–≤", use_container_width=True):
            st.switch_page("pages/4_üåæ_Sowing.py")

    st.markdown("---")

    # ============================================================================
    # –ü–û–°–õ–ï–î–ù–ò–ï –û–ü–ï–†–ê–¶–ò–ò
    # ============================================================================

    if operations_count > 0 and farm:
        st.markdown("### üìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Ö–æ–∑—è–π—Å—Ç–≤—É
        recent_operations = db.query(
            Operation.operation_date,
            Operation.operation_type,
            Field.name.label('field_name'),
            Operation.crop,
            Operation.area_processed_ha
        ).join(Field).filter(
            Field.farm_id == farm.id  # –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ò–õ–¨–¢–†: —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞
        ).order_by(Operation.operation_date.desc()).limit(10).all()

        if recent_operations:
            df_operations = pd.DataFrame(recent_operations, columns=[
                '–î–∞—Ç–∞', '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏', '–ü–æ–ª–µ', '–ö—É–ª—å—Ç—É—Ä–∞', '–ü–ª–æ—â–∞–¥—å (–≥–∞)'
            ])

            # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
            operation_types_ru = {
                'sowing': '–ü–æ—Å–µ–≤',
                'fertilizing': '–í–Ω–µ—Å–µ–Ω–∏–µ —É–¥–æ–±—Ä–µ–Ω–∏–π',
                'spraying': '–û–ø—Ä—ã—Å–∫–∏–≤–∞–Ω–∏–µ',
                'harvesting': '–£–±–æ—Ä–∫–∞ —É—Ä–æ–∂–∞—è'
            }
            df_operations['–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏'] = df_operations['–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏'].map(
                lambda x: operation_types_ru.get(x, x)
            )

            st.dataframe(df_operations, use_container_width=True, hide_index=True)
        else:
            st.info("–û–ø–µ—Ä–∞—Ü–∏–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")

    # ============================================================================
    # –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –•–û–ó–Ø–ô–°–¢–í–£
    # ============================================================================

    if farms_count > 0:
        st.markdown("---")
        st.markdown("### üè¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö–æ–∑—è–π—Å—Ç–≤–µ")

        if farm:
            col1, col2, col3 = st.columns(3)

            with col1:
                st.markdown(f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {farm.name}")
                st.markdown(f"**–ë–ò–ù:** {farm.bin}")
                st.markdown(f"**–¢–∏–ø:** {farm.farm_type or '–ù–µ —É–∫–∞–∑–∞–Ω'}")

            with col2:
                st.markdown(f"**–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å:** {farm.total_area_ha or 0:,.0f} –≥–∞")
                st.markdown(f"**–ü–∞—à–Ω—è:** {farm.arable_area_ha or 0:,.0f} –≥–∞")
                st.markdown(f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π:** {fields_count}")

            with col3:
                st.markdown(f"**–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å:** {farm.director_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
                st.markdown(f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {farm.phone or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                st.markdown(f"**Email:** {farm.email or '–ù–µ —É–∫–∞–∑–∞–Ω'}")

finally:
    db.close()

# Sidebar
with st.sidebar:
    st.markdown("### ‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
    st.info("""
    **Dashboard** –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ.

    **–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:**
    - –ú–µ—Ç—Ä–∏–∫–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    - –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
    - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è

    **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–æ—Ä—è–¥–æ–∫ —Ä–∞–±–æ—Ç—ã:**
    1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ
    2. –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—è
    3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel (–µ—Å–ª–∏ –µ—Å—Ç—å)
    4. –ù–∞—á–Ω–∏—Ç–µ –≤–Ω–æ—Å–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏
    """)

    st.markdown("### üéØ –¶–µ–ª–∏")
    st.markdown(f"""
    - –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: **>70%**
    - ML-–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: **>90%**
    - –í—Å–µ –ø–æ–ª—è –≤–Ω–µ—Å–µ–Ω—ã: **‚úì**
    - –û–ø–µ—Ä–∞—Ü–∏–∏: **100+**
    """)
